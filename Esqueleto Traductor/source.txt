

struct Persona {
	edad:int;
	meses:[12] int;
};

var juan:Persona;
var anton:Persona;

g():Persona {	

}

f(a:[10] int) {	
	return 25;
}



h(a:int, b:int):int {
	if(a > 10) {
		return 5.6;	
	}
	return 'a';	
}
j(a:int, b:float):float {
	h(2);	
	
}

main() {
	
	var i:int;
	var f:float;
	var v:[10]int;

	if(2.5) { }	
	if (i) { }
	
	while(juan) { }	
	while (i) {}
	
	5 = 6; 
	i = f; 
	juan = anton; 

	read juan;	
	read 35;	
	read i;
	
	print juan; 
	print f / 2.5;

	j(12, 12.5);
	j(12, 12); 
	j(12);	
	j(12, 12.5, 4); 

	print main();	
	print j(12, 12.5);
	print j(12, 12); 
	print j(12);		
	print j(12, 12.5, 4); 

	print juan + anton;	
	print 2.5 * 2;		// Deben ser del mismo tipo
	print i - 2;

	print 2.5 && f;	// Deben ser tipo entero
	print 2 || i;
	print !2.5; // Debe ser entero

	print juan > anton;	// Deben ser tipos simples
	print 2.5 < 2;		// Deben ser del mismo tipo
	print i == 2;
	
	print <int>(2.5) + i;
	print <Persona>(2.5);	// Tipos simples
	print <int>(juan);		// Expresiones de tipos simples
	print <float>(2.5);		// Deben ser distintos tipos
	
	print juan[5];	// Debe ser tipo array
	print 2[5];	// Debe ser tipo array
	print v[5.0];	// Debe ser indice entero
	print v[i+2];
	
	print juan.edad;
	print 5.edad;	// Se requiere tipo struct
	print juan.nombre; // Campo no definido

}

